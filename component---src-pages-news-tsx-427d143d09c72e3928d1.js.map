{"version":3,"file":"component---src-pages-news-tsx-427d143d09c72e3928d1.js","mappings":"sJA+BA,UApB4B,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnC,GAAIA,SAAAA,EAAQC,OACV,MAAM,IAAIC,MAAMF,EAAO,GAAGG,SAG5B,OACEC,EAAAA,EAAAA,IAAAA,OAAAA,MACEA,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CAAKC,MAAM,iBACXF,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,SACAA,EAAAA,EAAAA,IAAAA,KAAAA,KACGL,EAAKQ,UAAUC,MAAMC,KAAI,SAAAC,GAAI,OAC5BN,EAAAA,EAAAA,IAAAA,KAAAA,CAAIO,IAAKD,EAAKE,OACZR,EAAAA,EAAAA,IAACS,EAAAA,KAAD,CAAMC,GAAE,SAAWJ,EAAKE,MAASF,EAAKJ","sources":["webpack://enkake-inc/./src/pages/news.tsx"],"sourcesContent":["import { graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\nimport { FC } from \"react\"\nimport { SEO } from \"../components/SEO\"\n\ninterface Props {\n  data: Queries.TopNewsPostsQuery\n  errors?: Error[]\n}\n\n\nconst NewsPage: FC<Props> = ({ data, errors }) => {\n  if (errors?.length) {\n    throw new Error(errors[0].message);\n  }\n\n  return (\n    <main>\n      <SEO title=\"enkake News\" />\n      <h1>News</h1>\n      <ul>\n        {data.newsPosts.nodes.map(post => (\n          <li key={post.slug}>\n            <Link to={`/news/${post.slug}`}>{post.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  )\n}\n\nexport default NewsPage\n\nexport const pageQuery = graphql`\n  query AllNewsPosts {\n    newsPosts: allContentfulPost(limit: 9999, sort: {fields: [createdAt], order: DESC}) {\n      nodes {\n        slug\n        title\n        createdAt\n      }\n    }\n  }\n`"],"names":["data","errors","length","Error","message","___EmotionJSX","SEO","title","newsPosts","nodes","map","post","key","slug","Link","to"],"sourceRoot":""}