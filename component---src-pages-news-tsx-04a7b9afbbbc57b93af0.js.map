{"version":3,"file":"component---src-pages-news-tsx-04a7b9afbbbc57b93af0.js","mappings":"qKASaA,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACnD,OAAOC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACLA,EAAAA,EAAAA,IAAAA,QAAAA,KAAQH,IACRG,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,KAAK,QAAQC,QAASL,IAC3BC,IAAeE,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASJ,IACjDA,IAAeE,EAAAA,EAAAA,IAAAA,OAAAA,CAAMG,SAAS,iBAAiBD,QAASJ,IACxDC,IAASC,EAAAA,EAAAA,IAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASH,O,8DCgBjD,UApB4B,SAAC,GAAsB,IAApBK,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnC,GAAIA,SAAAA,EAAQC,OACV,MAAM,IAAIC,MAAMF,EAAO,GAAGG,SAG5B,OACER,EAAAA,EAAAA,IAAAA,OAAAA,MACEA,EAAAA,EAAAA,IAACJ,EAAAA,EAAD,CAAKC,MAAM,iBACXG,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,SACAA,EAAAA,EAAAA,IAAAA,KAAAA,KACGI,EAAKK,UAAUC,MAAMC,KAAI,SAAAC,GAAI,OAC5BZ,EAAAA,EAAAA,IAAAA,KAAAA,CAAIa,IAAKD,EAAKE,OACZd,EAAAA,EAAAA,IAACe,EAAAA,KAAD,CAAMC,GAAE,SAAWJ,EAAKE,MAASF,EAAKf","sources":["webpack://enkake-inc/./src/components/SEO.tsx","webpack://enkake-inc/./src/pages/news.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { FC } from \"react\"\n\ninterface Props {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport const SEO: FC<Props> = ({ title, description, image }) => {\n  return <>\n    <title>{title}</title>\n    <meta name=\"title\" content={title} />\n    {description && <meta name=\"description\" content={description} />}\n    {description && <meta property=\"og:description\" content={description} />}\n    {image && <meta property=\"og:image\" content={image} />}\n  </>\n}","import { graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\nimport { FC } from \"react\"\nimport { SEO } from \"../components/SEO\"\n\ninterface Props {\n  data: Queries.TopNewsPostsQuery\n  errors?: Error[]\n}\n\n\nconst NewsPage: FC<Props> = ({ data, errors }) => {\n  if (errors?.length) {\n    throw new Error(errors[0].message);\n  }\n\n  return (\n    <main>\n      <SEO title=\"enkake News\" />\n      <h1>News</h1>\n      <ul>\n        {data.newsPosts.nodes.map(post => (\n          <li key={post.slug}>\n            <Link to={`/news/${post.slug}`}>{post.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  )\n}\n\nexport default NewsPage\n\nexport const pageQuery = graphql`\n  query AllNewsPosts {\n    newsPosts: allContentfulPost(limit: 9999, sort: {fields: [createdAt], order: DESC}) {\n      nodes {\n        slug\n        title\n        createdAt\n      }\n    }\n  }\n`"],"names":["SEO","title","description","image","___EmotionJSX","name","content","property","data","errors","length","Error","message","newsPosts","nodes","map","post","key","slug","Link","to"],"sourceRoot":""}